#!/usr/bin/env bash

###############
## VARIABLES ##
###############

# Create timestamp for log file
timestamp=$(date +"%Y-%m-%d_%H:%M:%S")

# Save current user's username to variable
username="$(whoami)"

#################
## MAIN SCRIPT ##
#################

# Run script that corresponds to arch or debian and stream output to a log file
echo "LINUX SETUP SCRIPT FOR ARCH AND DEBIAN LINUX DISTRIBUTIONS"; sleep 3
mkdir -p logs # Make sure logs directory exists
if [[ -f /etc/os-release || -n "$1" ]]; then
    source /etc/os-release
    if [[ $ID_LIKE =~ "arch" || "$1" == "arch" ]]; then
        scripts/setup-arch $username | tee logs/${timestamp}_setup.log
    elif [[ $ID_LIKE =~ "debian" || "$1" == "debian" ]]; then
        scripts/setup-debian $username | tee logs/${timestamp}_setup.log
    elif [[ -n "$1" && "$1" != "arch" && "$1" != "debian" ]]; then
        echo "[SETUP_ERROR] : Unsupported distribution variable provided. Variable can either be \"arch\" or \"debian\"."
        exit 1
    else
        echo "[SETUP_ERROR] : Unknown distribution in ID_LIKE. Provide arch or debian as a variable, if you know it applies to your distribution. For example: ./setup \"arch\""
        exit 1
    fi
else
    echo "[SETUP_ERROR] : /etc/os-release not found. Provide arch or debian as a variable, if you know it applies to your distribution. For example: ./setup \"arch\""
    exit 1
fi

#######################
## POST SCRIPT TASKS ##
#######################

if [[ $? = 0 ]]; then
    echo "SETUP FINISHED"
    echo "The following post setup tasks should still be done:"
    echo "1. Reboot the machine."
    echo "2. Run kitty with \"mod+enter\"."
    echo "3. Run the command \"arandr\", set your screen/s and resolution correctly and save the file as \"monitor.sh\‚Äù."
    echo "4. If a firewall was already installed, check its rules."
    echo "5. Install nvm and node (+npm) with following commands:"
    echo "    - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash"
    echo "    - exec zsh"
    echo "    - nvm install node"
    echo "6. Open tmux session with the command \"tmux\" and install tmux plugins by pressing \"ctrl+space I\"."
    echo "7. Open neovim once with command \"nvim\" and let it install all the plugins."
    echo "8. If everything works, you can remove the old backup directories of configurations from \"~/.config\". if you want to."
else
    echo "[SETUP_ERROR] : Script was interrupted by an unexpected error."
fi
